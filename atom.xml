<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>与世而移</title>
  <subtitle>veni，vidi，vici!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-27T14:20:35.239Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qijunhu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Targets in 2017</title>
    <link href="http://yoursite.com/2017/02/03/Targets-in-2017/"/>
    <id>http://yoursite.com/2017/02/03/Targets-in-2017/</id>
    <published>2017-02-03T13:25:05.000Z</published>
    <updated>2017-08-27T14:20:35.239Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Try to balance work with life…..eg a new work  that has more time for personal affairs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply for a master degree in CS,  based on # 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strengthen body, eg run 15 kms per week&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Creative thinking and learning , eg answer one problem in ZHIHU or Quora per week seriously&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be more humorous and positive thinking ,eg read mord , see more and laugh more &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;Try to balance work with life…..eg a new work  that has more time for personal affairs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply for a master degree in CS,  based on # 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strengthen body, eg run 15 kms per week&lt;/p&gt;
    
    </summary>
    
      <category term="自我管理" scheme="http://yoursite.com/categories/%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="target" scheme="http://yoursite.com/tags/target/"/>
    
  </entry>
  
  <entry>
    <title>工作总结（201407-201607）</title>
    <link href="http://yoursite.com/2016/07/17/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/07/17/工作总结/</id>
    <published>2016-07-17T06:51:02.000Z</published>
    <updated>2016-07-31T04:41:56.342Z</updated>
    
    <content type="html">&lt;p&gt;大学毕业后的第一份工作从事的是软件测试， 从14年7月到16年7月整整2年时间，在人生中也是很深刻的一笔。近期工作发生了变动， 转岗到了软件开发，算是回到了最初的轨道， 所以想着要总结下这两年的工作。 第一份工作映像总是最为深刻的，有初入职场的彷徨，有过争吵，有过哭泣，有过抱怨， 但最主要的还是成长。 从学生的思维到职场思维的转变，实际项目的经历（包括整个团队怎么进行分工与合作， 过程流程)以及个人能力的成长。&lt;/p&gt;
&lt;h4 id=&quot;1-从学生思维到职场思维&quot;&gt;&lt;a href=&quot;#1-从学生思维到职场思维&quot; class=&quot;headerlink&quot; title=&quot;1. 从学生思维到职场思维&quot;&gt;&lt;/a&gt;1. 从学生思维到职场思维&lt;/h4&gt;&lt;p&gt;小学，初中，高中，大学整整16年的读书生涯让我们习惯了一种做事与思考的模式：老师布置任务，我们想尽办法把答案解答出来。这种模式就是典型的学生模式。当我们从学校毕业进入职场， 尽管我们从身份上来说不再是学生，但毫不奇怪的是我们会把前面整整16年习惯的思维方式–学生思维带动职场中去。&lt;strong&gt;从学生到到职场人士做的事情没有本质变化，都是在解决问题和完成任务，但解决问题的方式有非常大的区别。&lt;/strong&gt; 在我的理解中，职场思维与学生思维有以下几点显著的不同：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主动性&lt;/strong&gt;&lt;br&gt;主动性的差异体现在两个方面：&lt;br&gt;&lt;strong&gt;1. 主动去明确任务的目标与要求&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2. 主要去思考，去改进如何更高效的解决问题&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;学生时代我们是被动的，  被动的等待老师布置作业与任务，然后我们再拖拖拉拉的完成作业即可。同时学生时代任务是非常明确的， 多少道题，每道题的答案等信息都是明确的。&lt;/p&gt;
&lt;p&gt;职场明显不一样，职场是非常开放的，上级给你任务时可能当前他也不是非常清楚这个事情要做成什么样。 这就需要我们主动去收集相关信息，去搞清楚事情要做成什么样子，去明确事情的目标。&lt;/p&gt;
&lt;p&gt;另外一点就是，同一个事情往往有多种解决方案， 这就需要我们主动需思考怎么样更高效的解决问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协作性&lt;/strong&gt;&lt;br&gt;学生时代是不鼓励协作的，老师不会喜欢同学们协作来完成作业， 协作来考试， 学生时代倡导的是独立完成。&lt;/p&gt;
&lt;p&gt;但职场不一样， 职场中问题的复杂度远远超过学生时代。 学生时代的编程题最多就几千行代码，而实际的软件产品少的几十万行，多的上千万行， 一个人不吃不喝一辈子都完成不了。  所以在职场中几乎所有的项目都是团队协作来完成的。&lt;/p&gt;
&lt;p&gt;团队分工与协作，这是职场思维中非常重要的一部分。学生时代思考问题，更多的考量是“我应该怎么做”，而工作中应该更多考量的是“&lt;strong&gt;我们应该怎么做，我可以做什么&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用已有资源快速解决问题&lt;/strong&gt;&lt;br&gt;老师是讨厌利用现有解决方案的学生的， 老师讨厌完成作业时抄袭已有答案的学生。&lt;/p&gt;
&lt;p&gt;而职场中不一样， 能够利用已有的解决方案快速的解决问题是一种非常受欢迎的能力。 &lt;/p&gt;
&lt;p&gt;利用已有资源（现成的解决方案或者存在的经验丰富的人）快速解决问题是一种非常优秀的能力， 这样的能力即能避免现有资源的浪费，也能快速的解决问题，完成目标。&lt;/p&gt;
&lt;p&gt;在工作中积极的&lt;strong&gt;提问与求助&lt;/strong&gt;就是利用已有资源的一种表现。&lt;/p&gt;
&lt;p&gt;软件行业中如火如荼的&lt;strong&gt;开源运动&lt;/strong&gt;就是这一思维的实践，重用也是软件行业工程能力的一种体现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么有这样的差异&lt;/strong&gt;&lt;br&gt;同样是解决问题，完成任务，职场与校园的思考方式有这样大的差异的原因是在于两者的目的不一样。&lt;br&gt;职场是&lt;strong&gt;结果导向&lt;/strong&gt;的，关注的高效，快速的解决问题，完成任务， 而对过程不怎么关心。&lt;br&gt;校园是&lt;strong&gt;重过程&lt;/strong&gt;的， 目的是让学生参与训练的过程从而掌握学习的内容。&lt;br&gt;所以工作的核心，就是利用各种能够利用的资源(不论是自己的知识，经验，还是他人的能力，还是现有的解决方案等）高效，迅速的解决问题，完成任务。&lt;/p&gt;
&lt;h4 id=&quot;2-项目运作流程&quot;&gt;&lt;a href=&quot;#2-项目运作流程&quot; class=&quot;headerlink&quot; title=&quot;2. 项目运作流程&quot;&gt;&lt;/a&gt;2. 项目运作流程&lt;/h4&gt;&lt;p&gt;华为主要的研发流程是&lt;a href=&quot;http://baike.baidu.com/link?url=UbrhznnCk9RwKI7z36OlNKTLiH0KTWpOHKW58-4CHFhjDKXKcy_pPq87zxi36BAvSQK8QpTwyL0ceeDiOnG_8q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IPD&lt;/a&gt;流程，  对于互联网行业比较流行的敏捷模式有过一定的了解但是不够深入。&lt;/p&gt;
&lt;p&gt;IPD流程是一个按阶段推进的项目开发流程， 整个完成的流程一般要持续半年到一年的时间，可以交付一个完整的版本。一般分为&lt;strong&gt;概念，计划，开发，验证，发布，生命周期&lt;/strong&gt;这几个过程。 开发，测试，资料，SE等不同的角色都是按照这个流程来进行分工与协作的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;概念&lt;/strong&gt;：主要是分析市场有哪些机会点，这些机会点可以提炼出一些产品的需求， 主要搞清楚要做什么样的产品&lt;br&gt;&lt;strong&gt;计划&lt;/strong&gt;：主要明确整个项目的预算，人力，进度，一些交付的关键时间点，这个阶端SE要进行需求分析，开发和测试也会参与&lt;br&gt;&lt;strong&gt;开发&lt;/strong&gt;：包括三个阶段&lt;br&gt;     1.开发测试的需求分析， 开发输出模块设计，测试输出测试用例&lt;br&gt;     2.开发编码&lt;br&gt;     3.测试验证，主要是功能验证&lt;br&gt;&lt;strong&gt;验证&lt;/strong&gt;：验证阶段主要是实验局验证，需要有实际的局点做验证，输出实验局测试报告。当然还会进行一些DFX质量属性的验证，  基础的功能验证在开发阶段就已经完成。包括一些性能测试，和第三方产品的对接测试，一些用户使用场景的场景测试等。&lt;br&gt;&lt;strong&gt;发布&lt;/strong&gt;：产品的发布阶段， 主要是一些发布流程&lt;br&gt;&lt;strong&gt;生命周期&lt;/strong&gt;：产品的维护阶段， 主要是处理，修复产品在实际局点运行过程中发现的一些问题， 一般有专门的维护团队。生命周期一般持续几年左右，结束后该产品不再维护。&lt;/p&gt;
&lt;h4 id=&quot;3-专业能力提升&quot;&gt;&lt;a href=&quot;#3-专业能力提升&quot; class=&quot;headerlink&quot; title=&quot;3.专业能力提升&quot;&gt;&lt;/a&gt;3.专业能力提升&lt;/h4&gt;&lt;p&gt;专业能力的提升体现在以下几方面：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;产品知识&lt;br&gt;对工业级的产品和解决方案架构有一定了解，特别是对即时通讯类产品的流程，原理，技术基本都了解  &lt;/li&gt;
&lt;li&gt;基础知识&lt;br&gt;一些行业需要的基础知识也是收获，  数据库基础（SQL使用，存储过程，Oracle 性能调优等），Linux基础（常用命令使用），网络基础  &lt;/li&gt;
&lt;li&gt;测试行业知识 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试活动是一种质量保证(QA)活动，  很多公司相应的职位也许不叫测试，而是称为QA。&lt;br&gt;最大的收获是对软件的质量属性和评估有了比较深刻的认识，&lt;strong&gt;那种认为软件只要是实现了要求的功能就是质量是非常狭隘的理解&lt;/strong&gt;。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件的质量一般需要从以下几个维度去衡量：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;功能&lt;/strong&gt;，即软件有没有实现要求的功能，例如浏览器基本的功能就是能浏览网页， 功能实现是质量中最基础的部分&lt;br&gt;&lt;strong&gt;可靠性&lt;/strong&gt;， 软件产品在面对一些异常场景时是否有高的鲁棒性， 例如PC在异常断电后要能继续正常使用，不会出现数据丢失，功能异常等情况， 春运期间大量用户买票导致12306系统瘫痪也是系统可靠性不高的一个例子（没有对浪涌场景的可靠性设计）&lt;br&gt;&lt;strong&gt;性能&lt;/strong&gt;， 性能指标也是产品质量属性中很重要的一环，例如微信在春晚期间能支持每秒上亿次的摇一摇就是微信系统非常重要的系统指标。&lt;br&gt;&lt;strong&gt;安全性&lt;/strong&gt;，欧洲和美国对软件产品的安全要求非常严格，软件安全性主要是应对日益严重的网络安全威胁。用户数据保护，抗DDOS 攻击，登录系统的防暴力破解等都是常见的安全要求&lt;br&gt;&lt;strong&gt;可服务性&lt;/strong&gt;， 指系统的安装，部署，使用，维护与升级，系统的运维是不是简单，快捷，还包括系统出现问题时的定位效率等&lt;br&gt;&lt;strong&gt;用户体验&lt;/strong&gt;， 对于和用户直接交互的产品， 例如手机App, WEB 页面等，  最为重要的可能就是用户体验了， 互联网行业讲究的就是体验为网。体验我理解就是让用户用的爽，App 的UI设计非常漂亮，登录速度很快，响应速度很快等都是体验好的表现，我们肯定不会喜欢用一个界面很丑，用起来还一卡一卡的App 的。 &lt;/p&gt;
&lt;p&gt;测试工作的一般流程是从需求分析到测试设计，得到的测试用例， 最后根据测试用例的执行结果来进行质量评估，一般是测试报告的形式。穿插在其中的是对修复的问题进行验证，确保修复是成功的且没有引入新的问题。&lt;/p&gt;
&lt;p&gt;在迭代速度越来越快的背景下，&lt;strong&gt;自动化测试&lt;/strong&gt;是保证产品质量非常有效的有段。&lt;/p&gt;
&lt;h4 id=&quot;4-开发人员的质量&quot;&gt;&lt;a href=&quot;#4-开发人员的质量&quot; class=&quot;headerlink&quot; title=&quot;4. 开发人员的质量&quot;&gt;&lt;/a&gt;4. 开发人员的质量&lt;/h4&gt;&lt;p&gt;对一个开发人员来说，高质量其实意味着两个层次不同的要求，因为开发人员交付的产品其实是两种：&lt;strong&gt;源代码，源代码编译出来的软件产品&lt;/strong&gt;。这两种不同的产品对应着不同的用户， 源代码的用户是团队内其他开发人员， 软件的用户是产品实际的用户。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开发人员实际面向两种不同的用户， 因此有两种不同层次的质量诉求，一种是最终用户对产品的质量诉求，一种是团队其他成员对代码的质量诉求。&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;实际用户对产品质量的诉求，就是前面提到的功能，性能，可靠性，可服务性，用户体验等质量属性。&lt;/p&gt;
&lt;p&gt;开发人员对代码的质量诉求，主要是以下几个方面：&lt;br&gt;&lt;strong&gt;1.最小的复杂度&lt;/strong&gt;&lt;br&gt;  函数不能太长，圈复杂度不能过高等&lt;br&gt;&lt;strong&gt;2.易于维护&lt;/strong&gt;&lt;br&gt;  变量命名见名知意，统一的缩进风格，充分的注释等&lt;br&gt;&lt;strong&gt;3.高内聚，低耦合&lt;/strong&gt;&lt;br&gt;  一个模块应该恰当好的只做一件事&lt;br&gt;&lt;strong&gt;4.可扩展性&lt;/strong&gt;&lt;br&gt;  前期就应该考虑到怎么尽可能改动小的去扩展功能&lt;br&gt;&lt;strong&gt;5.可重用性&lt;/strong&gt;&lt;br&gt;  可重用只别的模块不经过改动或改动很小就可以利用已经实现的模块&lt;br&gt;&lt;strong&gt;6.低扇出，高扇入&lt;/strong&gt;&lt;br&gt;  扇入指直接调用该模块的上级模块个数，扇入大表示模块的复用程度高&lt;br&gt;  扇出指该模块直接调用的下级模块个数，扇出大代表该模块复杂度高&lt;br&gt;  良好的软件结构，通常顶层扇出大，中间扇出小，底层模块则有大扇入&lt;br&gt;&lt;strong&gt;7.可移植性&lt;/strong&gt;&lt;br&gt;  程序从一种计算环境转移到另一种计算环境，例如从Windows到Linux ,  从软件对新环境的适应性这一方面反映了软件的质量&lt;br&gt;&lt;strong&gt;8.标准技术&lt;/strong&gt;&lt;br&gt;  有标准的解决方案就应该使用标准的办法，而不是自己造轮子，这样代码易于理解和维护  &lt;/p&gt;
&lt;p&gt;一般比较大的公司都会有自己的编码规范，就是通过规范的形式来达到上面的这些要求，也可以参考业界公认的一些规范，&lt;a href=&quot;https://google.github.io/styleguide/cppguide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google C++ Style Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于测试人员来讲，开发测试代码时其角色是开发的角色，也应该要考虑测试代码的一些质量属性。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大学毕业后的第一份工作从事的是软件测试， 从14年7月到16年7月整整2年时间，在人生中也是很深刻的一笔。近期工作发生了变动， 转岗到了软件开发，算是回到了最初的轨道， 所以想着要总结下这两年的工作。 第一份工作映像总是最为深刻的，有初入职场的彷徨，有过争吵，有过哭泣，有过
    
    </summary>
    
      <category term="工作总结" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="工作总结" scheme="http://yoursite.com/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>时间管理，轻重缓急</title>
    <link href="http://yoursite.com/2016/06/26/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%EF%BC%8C%E8%BD%BB%E9%87%8D%E7%BC%93%E6%80%A5/"/>
    <id>http://yoursite.com/2016/06/26/时间管理，轻重缓急/</id>
    <published>2016-06-26T02:12:37.000Z</published>
    <updated>2016-06-26T03:51:19.931Z</updated>
    
    <content type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;时间管理是现代职场人士的必备技能。 现代人如何在快节奏的职场中做好工作？   如何平衡好工作和个人生活，家庭生活的关系？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;事分轻重缓急， 轻重指的是事情的重要性这一维度，  缓急指的是事情的迫切性这一个维度&lt;br&gt;尽量多的做重要不紧急的事情，  这个是时间管理的核心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;象限分析&quot;&gt;&lt;a href=&quot;#象限分析&quot; class=&quot;headerlink&quot; title=&quot;象限分析&quot;&gt;&lt;/a&gt;象限分析&lt;/h3&gt;&lt;p&gt;从轻重，缓急两个维度来分析， 就可以画出如下象限图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/QiJunHu/TinySTL/master/src/blog062601.jpg&quot; alt=&quot;时间管理四象限&quot;&gt;&lt;/p&gt;
&lt;p&gt;救火属于重要紧急的事情，  属于第一象限；&lt;br&gt;防火属于重要不紧急的事情，属于第二象限；&lt;br&gt;刷微信，微博等一般属于不紧急也不重要的事情，属于第三象限；&lt;br&gt;一些无聊的会议等属于紧急但不重要的事情，属于第四现象；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;时间管理的核心就是尽量做更多重要不紧急的事情&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###哪些事情属于重要不紧急&lt;/p&gt;
&lt;p&gt;运动，锻炼身体&lt;br&gt;阅读，看书，学习&lt;br&gt;思考，规划&lt;br&gt;人际关系，包括投入维持亲密关系&lt;/p&gt;
&lt;p&gt;这些事情应该是生活中优先级最高的事情， 尽量优先做这些事情！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;时间管理是现代职场人士的必备技能。 现代人如何在快节奏的职场中做好工作？   如何平衡好工作和个人生活，家庭生活的关系？&lt;/p&gt;
&lt;bloc
    
    </summary>
    
      <category term="自我管理" scheme="http://yoursite.com/categories/%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="时间管理" scheme="http://yoursite.com/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>main函数的第三个参数envp</title>
    <link href="http://yoursite.com/2016/06/16/main%E5%87%BD%E6%95%B0%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%8F%82%E6%95%B0envp/"/>
    <id>http://yoursite.com/2016/06/16/main函数的第三个参数envp/</id>
    <published>2016-06-16T15:32:13.000Z</published>
    <updated>2016-06-16T16:10:22.910Z</updated>
    
    <content type="html">&lt;h3 id=&quot;main函数两种常见形式&quot;&gt;&lt;a href=&quot;#main函数两种常见形式&quot; class=&quot;headerlink&quot; title=&quot;main函数两种常见形式&quot;&gt;&lt;/a&gt;main函数两种常见形式&lt;/h3&gt;&lt;p&gt;在C/C++ 程序中， 操作系统通过main函数来调用程序，main函数是从程序的入口。常见的main 函数定义有如下两种方式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;int main(void)&lt;br&gt;int main(int argc,char * argv[])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一种方式main 不接受参数，第二种方式可以在通过shell调用程序时给main 函数传入参数,argc 表示参数的个数，argv 为参数的内容&lt;/p&gt;
&lt;p&gt;举例说明，  main 函数以第二种方式定义， 程序名为test,在shell (bash for linux ,powershell for windows)中运行该程序：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;test  p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则argc = 2 , 两个参数， 其中程序名固定为第一个参数，在本例中 argv[0] = test , argv[1] = p&lt;/p&gt;
&lt;p&gt;bash 中各种命令不同的参数不同的效果可以通过这种机制实现&lt;/p&gt;
&lt;h3 id=&quot;main的第三种形式&quot;&gt;&lt;a href=&quot;#main的第三种形式&quot; class=&quot;headerlink&quot; title=&quot;main的第三种形式&quot;&gt;&lt;/a&gt;main的第三种形式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;int main(int argc,char　&lt;em&gt; argv[],char &lt;/em&gt; envp[])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第三个参数用来在程序运行时获取系统的环境变量，操作系统运行程序时通过envp 参数将系统环境变量传递给程序&lt;/p&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;iostream&amp;gt;


int main(int agrc,char * argv[],char * envp[])
{

    std::cout &amp;lt;&amp;lt;&amp;quot;Test the envp parameter of main function&amp;quot;&amp;lt;&amp;lt;std::endl;
    std::cout &amp;lt;&amp;lt; &amp;quot;environment paramter of system: &amp;quot;&amp;lt;&amp;lt;std::endl;

    for(int i  = 0 ;  envp[i] ; ++i)
    {
        std::cout&amp;lt;&amp;lt;envp[i]&amp;lt;&amp;lt;std::endl;
    }
    return 0;

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序运行后将系统所有环境变量打印出来了(如下给出的是windows上测试结果，linux 上环境变量与windows上不同)：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Test the envp parameter of main function&lt;br&gt;environment paramter of system:&lt;br&gt;ALLUSERSPROFILE=C:\ProgramData&lt;br&gt;APPDATA=C:\Users\alpha\AppData\Roaming&lt;br&gt;asl.log=Destination=file&lt;br&gt;CommonProgramFiles=C:\Program Files (x86)\Common Files&lt;br&gt;CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files&lt;br&gt;CommonProgramW6432=C:\Program Files\Common Files&lt;br&gt;COMPUTERNAME=DELL&lt;br&gt;ComSpec=C:\Windows\system32\cmd.exe&lt;br&gt;FP_NO_HOST_CHECK=NO&lt;br&gt;GOPATH=D:\projects\go_project&lt;br&gt;GOROOT=D:\Go\&lt;br&gt;HOMEDRIVE=C:&lt;br&gt;HOMEPATH=\Users\alpha&lt;br&gt;LOCALAPPDATA=C:\Users\alpha\AppData\Local&lt;br&gt;LOGONSERVER=\MicrosoftAccount&lt;br&gt;NUMBER_OF_PROCESSORS=4&lt;br&gt;OS=Windows_NT&lt;br&gt;Path=D:\Python27\;D:\Python27\Scripts;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32\config\systemprofile.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Go\bin;D:\Program Files\nodejs\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Users\alpha\AppData\Roaming\npm;E:\Program Files\phantomjs-2.1.1-windows\phantomjs-2.1.1-windows\bin&lt;br&gt;PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL&lt;br&gt;PROCESSOR_ARCHITECTURE=x86&lt;br&gt;PROCESSOR_ARCHITEW6432=AMD64&lt;br&gt;PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 60 Stepping 3, GenuineIntel&lt;br&gt;PROCESSOR_LEVEL=6&lt;br&gt;PROCESSOR_REVISION=3c03&lt;br&gt;ProgramData=C:\ProgramData&lt;br&gt;ProgramFiles=C:\Program Files (x86)&lt;br&gt;ProgramFiles(x86)=C:\Program Files (x86)&lt;br&gt;ProgramW6432=C:\Program Files&lt;br&gt;PSModulePath=C:\Users\alpha\Documents\WindowsPowerShell\Modules;C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules\&lt;br&gt;PUBLIC=C:\Users\Public&lt;br&gt;SESSIONNAME=Console&lt;br&gt;SystemDrive=C:&lt;br&gt;SystemRoot=C:\Windows&lt;br&gt;TEMP=C:\Users\alpha\AppData\Local\Temp&lt;br&gt;TMP=C:\Users\alpha\AppData\Local\Temp&lt;br&gt;USERDOMAIN=DELL&lt;br&gt;USERDOMAIN_ROAMINGPROFILE=DELL&lt;br&gt;USERNAME=alpha&lt;br&gt;USERPROFILE=C:\Users\alpha&lt;br&gt;VS140COMNTOOLS=D:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\&lt;br&gt;windir=C:\Windows  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;是否该使用三个参数的main函数&quot;&gt;&lt;a href=&quot;#是否该使用三个参数的main函数&quot; class=&quot;headerlink&quot; title=&quot;是否该使用三个参数的main函数&quot;&gt;&lt;/a&gt;是否该使用三个参数的main函数&lt;/h3&gt;&lt;p&gt;先说结论：应该尽量避免使用&lt;/p&gt;
&lt;p&gt;有一篇&lt;a href=&quot;http://www2.cs.uidaho.edu/~krings/CS270/Notes.S10/270-F10-20.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;environ&lt;/a&gt; 的文章把原因说的比较清楚：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because ISO C specifies that the main function be written&lt;br&gt;with two arguments, and because this third argument provides&lt;br&gt;no benefit over the global variable environ, POSIX.1 specifies&lt;br&gt;that environ should be used instead of the (possible) third&lt;br&gt;argument. Access to specific environment variables is&lt;br&gt;normally through the getenv and putenv functions instead of&lt;br&gt;through the environ variable. But to go through the entire&lt;br&gt;environment, the environ pointer must be used&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ISO C/ISO C++ ,POSIX 标准都不支持main 三个参数的定义形式，&lt;strong&gt;VC 和GNU编译器都扩展了main 函数的定义&lt;/strong&gt;，所以目前可以这样使用。&lt;br&gt;如果要编写更加可移植的程序，应该使用全局环境变量environ 来代替envp的作用，如果要访问特定的环境变量，应该使用getenv 和putenv 函数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;iostream&amp;gt;
#include&amp;lt;stdlib.h&amp;gt;

extern char** environ;

int main(int agrc,char * argv[])
{

    std::cout &amp;lt;&amp;lt;&amp;quot;Test the envp parameter of main function&amp;quot;&amp;lt;&amp;lt;std::endl;
    std::cout &amp;lt;&amp;lt; &amp;quot;environment paramter of system: &amp;quot;&amp;lt;&amp;lt;std::endl;

    char ** env = environ;
    while(*env)
    {
        std::cout&amp;lt;&amp;lt;*env&amp;lt;&amp;lt;std::endl;
    }
    return 0;

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行效果与使用envp参数一样。&lt;/p&gt;
&lt;p&gt;getenv 和putenv 也是定义在stdlib.h 中，函数原型如下：   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;int putenv(char &lt;em&gt;str);&lt;br&gt;int setenv(const char &lt;/em&gt;name, const char *value, int rewrite);&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;main函数两种常见形式&quot;&gt;&lt;a href=&quot;#main函数两种常见形式&quot; class=&quot;headerlink&quot; title=&quot;main函数两种常见形式&quot;&gt;&lt;/a&gt;main函数两种常见形式&lt;/h3&gt;&lt;p&gt;在C/C++ 程序中， 操作系统通过main函数来调用程序，
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>爬虫基础--大数据时代的生产工具</title>
    <link href="http://yoursite.com/2016/05/23/Python%E7%88%AC%E8%99%AB%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2016/05/23/Python爬虫介绍/</id>
    <published>2016-05-23T14:48:33.000Z</published>
    <updated>2016-05-29T15:26:13.913Z</updated>
    
    <content type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;说起‘爬虫’，大家第一映像是这是个很酷的东西，听起来很厉害的样子。一般人对爬虫的理解就是这样了，不会对爬虫有一些深入的思考。   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我眼中爬虫的意义：爬虫是我们在信息化社会中获取信息最有效的工具.&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大数据的时代已经来临，基于大数据的数据挖掘，个性化推荐等领域都如火如荼。爬虫是个人获取大数据非常有效的工具。&lt;br&gt;大学毕业设计时的课题是实现一套股票题材的文本理解系统，输入是一段文本（股评，财经评论等），系统会输出文本是推荐买入，持仓还是卖出。基于大量样本数据的情况下，使用了决策树，随机森林，支持向量机3种不同的机器学习算法来训练模型，然后根据训练得到的模型来给出预测。&lt;br&gt;这实际就是目前淘宝，百度等各大互联网公司广泛使用的个性化推荐系统的原型。这里面非常重要的是需要有大量的样本的数据来训练预测模型，获取的大量的数据就得依靠爬虫了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;大数据时代的生产模式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;获取数据(爬虫等)  —- 数据处理(数据挖掘，机器学习等）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;爬虫工作原理&quot;&gt;&lt;a href=&quot;#爬虫工作原理&quot; class=&quot;headerlink&quot; title=&quot;爬虫工作原理&quot;&gt;&lt;/a&gt;爬虫工作原理&lt;/h3&gt;&lt;p&gt;首先爬虫是什么?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网络爬虫（又被称为网页蜘蛛，网络机器人，在FOAF社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动的抓取万维网信息的程序&amp;gt;或者脚本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们使用的互联网是网状的，一个一个WEB页面通过各种各样的方式链接在一起，就像一个蜘蛛网一样。我们实现的程序或脚本就像一只虫子一样从这个页面爬到另一个页面，抓取其中的信息，所以形象的称这样的工具为爬虫。&lt;/p&gt;
&lt;p&gt;爬虫程序一般需要实现以下几点：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;爬取网页：发送和接收HTTP（或HTTPS）请求  &lt;/li&gt;
&lt;li&gt;提取数据：解析获取到的HTML内容，从中提取需要的数据  &lt;/li&gt;
&lt;li&gt;爬取范围：指定程序爬取的网页范围，包括如何从一个页面转移到另一个页面，爬取页面的终止条件等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;python爬虫实战&quot;&gt;&lt;a href=&quot;#python爬虫实战&quot; class=&quot;headerlink&quot; title=&quot;python爬虫实战&quot;&gt;&lt;/a&gt;python爬虫实战&lt;/h3&gt;&lt;p&gt;选择python 来实现爬虫，而不是自己更熟悉的C++，是因为python 有非常多网络相关的标准库，在网络方面用起来更方面些。&lt;br&gt;在python中主要使用&lt;a href=&quot;https://docs.python.org/2/library/urllib2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;urllib,urllib2,httplib&lt;/a&gt;这几个库来处理HTTP相关的内容，实现&lt;strong&gt;爬取网页&lt;/strong&gt;；&lt;br&gt;从HTML内容中提取需要的数据主要通过&lt;strong&gt;正则表达式&lt;/strong&gt;实现， python 的正则表达式库是&lt;a href=&quot;https://docs.python.org/2/library/re.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;re&lt;/a&gt;；&lt;br&gt; 至于爬虫爬取网页的边界则是有用户自己控制，不需要特殊的技术支持&lt;/p&gt;
&lt;p&gt;下面的代码用于从&lt;a href=&quot;http://www.qiushibaike.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;糗事百科&lt;/a&gt;中自动获取&lt;em&gt;作者，段子内容，图片，好笑数，评论数&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# author huqijun ,2016/05/23

#import urllib,urllib2,re
import urllib
import urllib2
import re


page = 1
# url for qiushibaik
url = &amp;quot;http://www.qiushibaike.com/8hr/page/&amp;quot; + str(page)
user_agent = &amp;apos;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&amp;apos;
# http header
headers = {&amp;apos;User-Agent&amp;apos;:user_agent}

# Regular expression to extract data from HTML
pattern = re.compile(&amp;apos;&amp;lt;div class=&amp;quot;author clearfix&amp;quot;&amp;gt;.*?target=&amp;quot;_blank&amp;quot; title=&amp;quot;(.*?)&amp;quot;&amp;gt;.*?&amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;(.*?)&amp;apos;+
                 &amp;apos;&amp;lt;/div&amp;gt;.*?&amp;lt;img src=&amp;quot;(.*?)&amp;quot; alt=.*?class=&amp;quot;number&amp;quot;&amp;gt;(.*?)&amp;lt;/i&amp;gt;.*?class=&amp;quot;number&amp;quot;&amp;gt;(.*?)&amp;lt;/i&amp;gt;&amp;apos;,re.S)

try:
    # open url
    request = urllib2.Request(url,headers= headers)
    # get response
    response = urllib2.urlopen(request)
    content = response.read().decode(&amp;apos;utf-8&amp;apos;)
    # regular match
    items = re.findall(pattern,content)
    # print outcome
    for item in items:
        print item[0],item[1],item[2],item[3],item[4]
except urllib2.URLError,e:
    if hasattr(e,&amp;quot;code&amp;quot;):
        print e.code
    if hasattr(e,&amp;quot;reason&amp;quot;):
        print e.reason
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序运行的结果(这里只展示一条）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;暖男找暖女 &lt;/p&gt;
&lt;p&gt;老妹结婚前，妹夫的四个死党商量着闹洞房砸夯，结果结婚那天，在外地工作的老妹弄来了十九个伴娘，最轻的也一百六十多斤，个个又高又壮，妹&amp;gt;夫那四个死党准备闹洞房，一进门傻了，十九个女汉子把门一关，拳一握，硬把四个老爷们闹了，过程中，一个想跑，被拎小鸡一样又拎回去了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pic.qiushibaike.com/system/avtnew/3061/30613416/medium/20160514003803.jpg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pic.qiushibaike.com/system/avtnew/3061/30613416/medium/20160514003803.jpg&lt;/a&gt; 415 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看，我们成功的通过爬虫获取到糗事百科上的段子，爬虫的原理就是这样简单！&lt;/p&gt;
&lt;p&gt;优化后完整实现的代码: &lt;a href=&quot;https://github.com/geekhuqijun/webCrawler/blob/master/QSBK_Crawler.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;QSBK_Crawler.py&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这里有一个爬取本地相亲论坛所有符合条件女性的详细信息的例子供大家参考: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# -*- coding:utf-8 -*-
# author huqijun ,2016/05/26
#  19楼爬虫
# 19楼(www.19lou.com) 是一个杭州本地生活平台，这里主要用到其征婚板块
# 爬取19楼符合条件的女性资料，通过机器学习判断是否是喜欢的类型，如果是则自动发送站内信


import re
import urllib
import urllib2
import cookielib
import zlib



class _19floor(object):
    def __init__(self):
        # base url
        self.url_base1 = &amp;quot;http://www.19lou.com/love/list-164-&amp;quot;
        self.url_base2 = &amp;quot;.html&amp;quot;
        #  page index 1
        self.pageIndex = 1
        # search condition
        self.SearchConditionparameters = {
            # looking for female
            &amp;quot;sex&amp;quot;: &amp;quot;0&amp;quot;,
            # 18 to 30 year ole
            &amp;quot;startAge&amp;quot;: &amp;quot;18&amp;quot;,
            &amp;quot;endAge&amp;quot;: &amp;quot;30&amp;quot;,
            # not married
            &amp;quot;marry&amp;quot;: &amp;quot;1&amp;quot;,
            # location now in hangzhou ,zhejiang
            &amp;quot;locationProvince&amp;quot;: &amp;quot;31&amp;quot;,
            &amp;quot;locationCity&amp;quot;: &amp;quot;383&amp;quot;
        }
        self.SearchConditiondata = urllib.urlencode(self.SearchConditionparameters)
        # login data
        # replace with real username and passwd
        self.loginParam = {
            &amp;quot;userName&amp;quot;: &amp;quot;username&amp;quot;,
            &amp;quot;userPass&amp;quot;: &amp;quot;password&amp;quot;
        }
        self.loginData = urllib.urlencode(self.loginParam)
        self.loginURL = &amp;quot;http://www.19lou.com/login&amp;quot;
        self.cookie = cookielib.CookieJar()
        # login
        self.login()


    # login to website
    def login(self):
        request = urllib2.Request(self.loginURL, self.loginData)
        handler = urllib2.HTTPCookieProcessor(self.cookie)
        opener = urllib2.build_opener(handler)
        response = opener.open(request)
        #print self.cookie

    # get the serarch result of page pageIndex,  do not need login to get information
    def getSearchResult(self, pageIndex):
        url = self.url_base1 + str(pageIndex) + self.url_base2
        request = urllib2.Request(url, self.SearchConditiondata)
        # HTML webpage
        response = urllib2.urlopen(request)
        # 19lou is encoded in gb2312
        _response = response.read().decode(&amp;apos;gb2312&amp;apos;, &amp;apos;ignore&amp;apos;)
        pattern = re.compile(
            &amp;apos;&amp;lt;div class=&amp;quot;list-details&amp;quot;&amp;gt;.*?&amp;lt;a href=&amp;quot;(.*?)&amp;quot; target=&amp;quot;_blank&amp;quot; class=&amp;quot;user-details&amp;quot; ttname=&amp;quot;bbs_love_yhxx&amp;quot;&amp;gt;&amp;apos;,re.S)
        items = re.findall(pattern, _response)
        return items

    # need login to get detail information of Girls
    def getDetailInfo(self, url):
        #print url
        # cookie information
        cookieInfo = {}
        for item in self.cookie:
            cookieInfo[item.name] = item.value
            print item

        _sbs_auth_id = cookieInfo[&amp;quot;_sbs_auth_id&amp;quot;]
        _sbs_auth_uid = cookieInfo[&amp;quot;_sbs_auth_uid&amp;quot;]
        dm_ui = cookieInfo[&amp;quot;dm_ui&amp;quot;]
        sbs_auth_id = cookieInfo[&amp;quot;sbs_auth_id&amp;quot;]
        sbs_auth_uid = cookieInfo[&amp;quot;sbs_auth_uid&amp;quot;]
        JSESSIONID = cookieInfo[&amp;quot;JSESSIONID&amp;quot;]
        f8big = cookieInfo[&amp;quot;f8big&amp;quot;]

        #print _sbs_auth_id,_sbs_auth_uid,dm_ui,sbs_auth_id,sbs_auth_uid,JSESSIONID,f8big


        cookieHead =  r&amp;quot;bdshare_firstime=1460288971964;_Z3nY0d4C_=37XgPK9h-%3D1920-1920-1920-949;&amp;quot;+\
             &amp;quot;f8big=%s; _DM_S_=7f26ea80bdc38e887ed6eef907b1c333; JSESSIONID=%s; &amp;quot;  % (f8big,JSESSIONID) +\
             r&amp;quot;fr_adv_last=thread-top-reg; fr_adv=bbs_top_20160529_12651464335062915;checkin__40459849_0529=9_12_12;&amp;quot; + \
                  &amp;quot;sbs_auth_uid={0:s}; sbs_auth_id={1:s}; sbs_auth_remember=1; _sbs_auth_uid=&amp;amp;s;_sbs_auth_id={2:s}; dm_ui={3:s};&amp;quot;.format(
                      sbs_auth_uid, sbs_auth_id, _sbs_auth_uid, _sbs_auth_id, dm_ui)


        cookieEnd = r&amp;quot;_dm_userinfo=%7B%22uid%22%3A%2240459849%22%2C%22category%22%3A%22%E6%97%85%E6%B8%B8%2C%E7%BE%8E%E9%A3%9F%2C%E6%83%85%E6%84%9F%2C%E5%A9%9A%E5%BA%86%22%2C%22&amp;quot; + \
             r&amp;quot;sex%22%3A%221%22%2C%22frontdomain%22%3A%22www.19lou.com%22%2C%22stage%22%3A%22%22%2C%22ext%22%3A%22%22%2C%22ip%22%3A%2239.189.203.105%22%2C%22city%22%3A%22%E6%B5%99%E6%B1%9F%3A%E6%9D%AD%E5%B7%9E%22%7D; &amp;quot; + \
             r&amp;quot;loginwin_opened_user=40459849; Hm_lvt_5185a335802fb72073721d2bb161cd94=1464346870,1464364960,1464437399,1464485996; Hm_lpvt_5185a335802fb72073721d2bb161cd94=1464487611; &amp;quot; + \
             r&amp;quot;_DM_SID_=762d93b17978f46a069f43205ebdfb01; screen=1903; _dm_tagnames=%5B%7B%22k%22%3A%22%E5%A5%B3%E7%94%9F%E5%BE%81%E5%8F%8B%22%2C%22c%22%3A267%7D%2C%7B%22k%22%3A%22%E7%9B%&amp;quot; + \
             r&amp;quot;B8%E4%BA%B2%E8%AE%BA%E5%9D%9B%22%2C%22c%22%3A39%7D%2C%7B%22k%22%3A%22%E6%9D%AD%E5%B7%9E%E7%9B%B8%E4%BA%B2%E7%BD%91%22%2C%22c%22%3A39%7D%2C%7B%22k%22%3A%22%E6%9D%AD%E5%B7%9E%E5%BE%81%E5%A9%9A%E7%BD%91%22%2C%22c&amp;quot; + \
             r&amp;quot;%22%3A39%7D%2C%7B%22k%22%3A%22%E5%85%B6%E4%BB%96%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%9D%AD%E5%B7%9E%22%2C%22c%22%3A134%7D%2C%7B%22k%22%3A%22%E8%90%A7%E5%B1%B1%22%2C%22c%22%3A6%7D%2C%7B%22k%22%3A%22%E5%8D%95&amp;quot; + \
             r&amp;quot;%E8%BA%AB%E7%94%B7%E5%A5%B3%E7%9B%B8%E5%86%8C%22%2C%22c%22%3A3%7D%2C%7B%22k%22%3A%22%E5%BE%81%E5%8F%8B%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%89%BE%E7%94%B7%E5%8F%8B%22%2C%22c%22%3A613%7D%2C%7B%22k%22%3A%22%E7%9B&amp;quot; + \
             r&amp;quot;%B8%E4%BA%B2%22%2C%22c%22%3A4%7D%2C%7B%22k%22%3A%22%E7%BE%8E%E9%A3%9F%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E7%BB%93%E5%A9%9A%22%2C%22c%22%3A2%7D%2C%7B%22k%22%3A%22%E5%BA%8A%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%&amp;quot; + \
             r&amp;quot;E5%AE%B6%E5%BA%AD%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%83%85%E6%84%9F%E8%AF%9D%E9%A2%98%22%2C%22c%22%3A2%7D%2C%7B%22k%22%3A%22%E6%83%85%E6%84%9F%E6%97%A5%E8%AE%B0%22%2C%22c%22%3A6%7D%2C%7B%22k%22%3A%22%E5%89%8&amp;quot; + \
             r&amp;quot;D%E7%94%B7%E5%8F%8B%22%2C%22c%22%3A3%7D%2C%7B%22k%22%3A%22%E6%9A%A7%E6%98%A7%22%2C%22c%22%3A2%7D%2C%7B%22k%22%3A%22%E8%BD%AF%E5%A6%B9%E5%AD%90%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%9E%97%E5%BF%97%E7%8E%B2%22%2C%&amp;quot; + \
             r&amp;quot;22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%97%85%E8%A1%8C%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E4%BA%A4%E5%8F%8B%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%9D%AD%E5%B7%9E%E4%BA%A4%E5%8F%8B%E7%BD%91%22%2C%22c%22%3A4%7D%2C&amp;quot; + \
             r&amp;quot;%7B%22k%22%3A%22%E6%9D%AD%E5%B7%9E%E4%BA%A4%E5%8F%8B%E8%AE%BA%E5%9D%9B%22%2C%22c%22%3A4%7D%2C%7B%22k%22%3A%22%E6%81%8B%E7%88%B1%22%2C%22c%22%3A4%7D%2C%7B%22k%22%3A%22%E6%89%BE%E5%A5%B3%E5%8F%8B%22%2C%22c%22%3A22%7D&amp;quot; + \
             r&amp;quot;%2C%7B%22k%22%3A%22%E8%90%A7%E5%B1%B1%E7%94%B7%22%2C%22c%22%3A5%7D%2C%7B%22k%22%3A%22%E5%81%A5%E8%BA%AB%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E5%81%A5%E8%BA%AB%E6%88%BF%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%B7&amp;quot; + \
             r&amp;quot;%B1%E6%83%85%22%2C%22c%22%3A6%7D%2C%7B%22k%22%3A%22%E8%90%9D%E8%8E%89%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E5%A4%A9%E7%A7%A4%E5%A5%B3%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%9C%AC%E5%A1%98%E5%A5%B3%22%2C%22c%22&amp;quot; + \
             r&amp;quot;%3A1%7D%2C%7B%22k%22%3A%22%E9%97%AA%E5%A9%9A%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E9%85%B1%E6%B2%B9%22%2C%22c%22%3A4%7D%2C%7B%22k%22%3A%22%E9%97%BA%E8%9C%9C%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E4%B8%BD%E6%B0%B4&amp;quot; + \
             r&amp;quot;%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E4%B8%BE%E6%8A%A5%E8%BF%9D%E7%AB%A0%22%2C%22c%22%3A2%7D%2C%7B%22k%22%3A%22%E5%85%AB%E5%8D%A6%E7%BB%AF%E9%97%BB%22%2C%22c%22%3A2%7D%2C%7B%22k%22%3A%22%E7%89%B5%E6%89%8B%22%2C%&amp;quot; + \
             r&amp;quot;22c%22%3A2%7D%2C%7B%22k%22%3A%22%E9%BB%84%E6%99%93%E6%98%8E%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E9%A2%86%E8%AF%81%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%9D%8E%E6%98%93%E5%B3%B0%22%2C%22c%22%3A1%7D%2C%7B%22k%22&amp;quot; + \
             r&amp;quot;%3A%22%E6%96%87%E5%A8%B1%E8%BD%AE%E6%92%AD%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%97%B6%E5%B0%9A%22%2C%22c%22%3A3%7D%2C%7B%22k%22%3A%22%E6%B4%BB%E5%8A%A8%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E6%96%B0%E5%A8%9&amp;quot; + \
             r&amp;quot;8%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E5%A9%9A%E7%A4%BC%22%2C%22c%22%3A1%7D%2C%7B%22k%22%3A%22%E5%A9%9A%E7%BA%B1%22%2C%22c%22%3A1%7D%5D; pm_count=%7B%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_2%22%3A21&amp;quot; + \
             r&amp;quot;%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_1%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_4%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_3%22%3A21%2C%22&amp;quot; + \
             r&amp;quot;pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_6%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x401_1%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_210x200_7%22%3A21%2C%22pc_hangzhou_city&amp;quot; + \
             r&amp;quot;EnterMouth_advmodel_adv_330x401_3%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_330x200_1%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_330x401_1%22%3A21%2C%22pc_hangzhou_cityEnterMouth_advmodel_adv_&amp;quot; + \
             r&amp;quot;330x401_2%22%3A21%2C%22pc_hangzhou_forumthread_button_adv_180x180_4%22%3A261%2C%22pc_hangzhou_forumthread_button_adv_180x180_3%22%3A261%2C%22pc_hangzhou_forumthread_button_adv_180x180_2%22%3A261%2C%22pc_hangzhou&amp;quot; + \
             r&amp;quot;_forumthread_button_adv_180x180_1%22%3A261%2C%22pc_hangzhou_forumthread_button_adv_180x180_5%22%3A15%2C%22pc_allCity_threadView_advmodel_adv_360x120_1%22%3A64%2C%22pc_allCity_threadView_button_adv_190x205_&amp;quot; + \
             r&amp;quot;1%22%3A3%2C%22pc_hangzhou_sbs_20_advmodel_adv_300x250_2%22%3A2%2C%22pc_hangzhou_sbs_20_advmodel_adv_200x200_1%22%3A2%7D; dayCount=%5B%7B%22id%22%3A7971%2C%22count%22%3A1%7D%2C%7B%22id%22%3A8099%2C%22count&amp;quot; + \
             r&amp;quot;%22%3A2%7D%2C%7B%22id%22%3A7238%2C%22count%22%3A2%7D%2C%7B%22id%22%3A8101%2C%22count%22%3A2%7D%2C%7B%22id%22%3A7421%2C%22count%22%3A1%7D%2C%7B%22id%22%3A8338%2C%22count%22%3A2%7D%2C%7B%22id%22%3A7107%2C%22count&amp;quot; + \
             r&amp;quot;%22%3A1%7D%2C%7B%22id%22%3A7724%2C%22count%22%3A2%7D%2C%7B%22id%22%3A8097%2C%22count%22%3A2%7D%2C%7B%22id%22%3A8758%2C%22count%22%3A2%7D%2C%7B%22id%22%3A6718%2C%22count%22%3A2%7D%2C%7B%22id%22%3A7119%2C%22count&amp;quot; + \
             r&amp;quot;%22%3A5%7D%2C%7B%22id%22%3A7919%2C%22count%22%3A5%7D%2C%7B%22id%22%3A8294%2C%22count%22%3A3%7D%2C%7B%22id%22%3A8325%2C%22count%22%3A1%7D%2C%7B%22id%22%3A8662%2C%22count%22%3A3%7D%2C%7B%22id%22%3A6700%2C%22count&amp;quot; + \
             r&amp;quot;%22%3A1%7D%5D&amp;quot;

        cookie = cookieHead + cookieEnd
        #print cookie

        header = {
            &amp;quot;Accept&amp;quot;: &amp;quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&amp;quot;,
            &amp;quot;Accept-Encoding&amp;quot;: &amp;quot;gzip, deflate, sdch&amp;quot;,
            &amp;quot;Accept-Language&amp;quot;: &amp;quot;zh-CN,zh;q=0.8&amp;quot;,
            &amp;quot;Cache-Control&amp;quot;: &amp;quot; max-age=0&amp;quot;,
            &amp;quot;Connection&amp;quot;: &amp;quot;close&amp;quot;,
            &amp;quot;Cookie&amp;quot;: cookie,
            &amp;quot;User-Agent&amp;quot;: &amp;quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36&amp;quot;,
            &amp;quot;Upgrade-Insecure-Requests&amp;quot;: &amp;quot;1&amp;quot;,
            &amp;quot;DNT&amp;quot;: &amp;quot;1&amp;quot;
        }
        request = urllib2.Request(url, headers=header)
        response = urllib2.urlopen(request)
        html = response.read()

        encodeType = response.headers.get(&amp;apos;Content-Encoding&amp;apos;)

        if encodeType == &amp;quot;gzip&amp;quot;:
            html = zlib.decompress(html, 16 + zlib.MAX_WBITS)

        _response = html.decode(&amp;apos;gb2312&amp;apos;, &amp;apos;ignore&amp;apos;)
        #print _response
        pattern = re.compile(&amp;apos;&amp;lt;p class=&amp;quot;mt10&amp;quot;&amp;gt;(.*?)&amp;lt;/p&amp;gt;.*?data-uname=&amp;quot;(.*?)&amp;quot; data-uid=&amp;quot;.*?&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;(.*?)    &amp;lt;/td&amp;gt;.*?&amp;apos; +
              &amp;apos;&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;(.*?)&amp;lt;/td&amp;gt;.*?&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;(.*?)&amp;lt;/td&amp;gt;.*?&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;(.*?)&amp;lt;/td&amp;gt;.*?&amp;lt;td&amp;gt;&amp;apos; +
            &amp;apos;(.*?)&amp;lt;/td&amp;gt;.*?&amp;lt;td style=&amp;quot;word-wrap:break-word;word-break:break-all;&amp;quot;&amp;gt;(.*?)&amp;lt;/td&amp;gt;.*?&amp;lt;img src=&amp;quot;(.*?)&amp;quot;/&amp;gt;&amp;apos;, re.S)
        # item is a list that contains a tuple
        item = re.findall(pattern, _response)
        girlInfo = []
        for temp in item[0]:
            # remove \r\n
            temp = temp.replace(&amp;apos;\r\n&amp;apos;,&amp;apos;&amp;apos;)
            # remove space
            temp = temp.replace(&amp;apos; &amp;apos;,&amp;apos;&amp;apos;)
            girlInfo.append(temp)
        return girlInfo

    # write gril&amp;apos;s info to file, eg excel file
    def saveTofile(self,girlInfo):
        pass


    def test(self):
        pageIndex = 1
        items = self.getSearchResult(pageIndex)
        girlInfo = self.getDetailInfo(items[0])
        for temp in girlInfo:
            print temp



spider = _19floor()
spider.test()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序测试结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;女，22岁，魔羯座，年薪6-9万，本科，身高162CM&lt;br&gt;欣芭比&lt;br&gt;从事自由职业工作,汉族&lt;br&gt;无住房,已买车,未婚&lt;br&gt;浙江杭州江干区&lt;br&gt;浙江温州&lt;br&gt;比较安静独立喜欢电影美食狗。&lt;br&gt;没有条条框框彼此合适可以从朋友做起。&lt;br&gt;&lt;a href=&quot;http://att3.citysbs.com/600xhangzhou/2016/05/29/13/780x780-135556_v2_14711464501356634_a2e12819608e252958e4ec4e20234a30.jpg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://att3.citysbs.com/600xhangzhou/2016/05/29/13/780x780-135556_v2_14711464501356634_a2e12819608e252958e4ec4e20234a30.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要的思路是通过爬虫爬取论坛中所有符合条件女性个人信息， 通过机器学习来判断是否是喜欢的类型，判断喜欢的自动则发送站内信。&lt;/p&gt;
&lt;p&gt;完整的代码在这里&lt;a href=&quot;https://github.com/geekhuqijun/webCrawler/tree/master/spider_19lou&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;19lou_Crawler.py&lt;/em&gt;&lt;/a&gt; ，包括爬虫，机器学习，站内信部分  &lt;/p&gt;
&lt;h3 id=&quot;困难与解决办法&quot;&gt;&lt;a href=&quot;#困难与解决办法&quot; class=&quot;headerlink&quot; title=&quot;困难与解决办法&quot;&gt;&lt;/a&gt;困难与解决办法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;正则表达式对人类相当不友好，比较难写&lt;br&gt;解决办法：&lt;br&gt;RegexBuddy:  好用的正则表达式调试工具；&lt;br&gt;PyQuery： JQuery 的Python 实现，Jquery 是专门用来从HTML中提取信息的一种语言&lt;br&gt;Xpath，BeautifulSOAP:  都是从HTML 中提取信息的工具&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用python 请求一个页面， 返回的是一段JavaScript 代码，而不是实际的HTML&lt;br&gt;解决办法：&lt;br&gt;通过Chrom 抓取浏览器的交互过程，发现浏览器GET请求是可以收到HTML的响应的；&lt;br&gt;通过WireShark 抓取爬虫的请求，对比和浏览器的请求，发现HTTPHeader 中缺少Cookie 字段，加上后即可(该网站用户不登录请求时都会带Cookie)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编解码问题，抓包看已返回HTML，但程序中输入还是乱码&lt;br&gt;解决办法：&lt;br&gt;查看网页源码，&lt;strong&gt;meta charset=”gb2312”&lt;/strong&gt;， 使用gb2312解码后还是乱码;&lt;br&gt;最后发现是HTML的内容经过gzip压缩, HTTP响应头中有&lt;strong&gt;Content-Encoding:gzip&lt;/strong&gt;&lt;br&gt;使用zlip解压问题解决：  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;response = urllib2.urlopen(request)

html = response.read()

encodeType = response.headers.get(&amp;apos;Content-Encoding&amp;apos;)

if encodeType == &amp;quot;gzip&amp;quot;:

html= zlib.decompress(html,16+zlib.MAX_WBITS)

print html      
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;心得与体会&quot;&gt;&lt;a href=&quot;#心得与体会&quot; class=&quot;headerlink&quot; title=&quot;心得与体会&quot;&gt;&lt;/a&gt;心得与体会&lt;/h3&gt;&lt;p&gt;不能正确获得想要的HTML页面，核心的解决办法就是&lt;strong&gt;构造和实际浏览器一模一样的请求&lt;/strong&gt;。&lt;br&gt;当程序的行为和浏览器一样时，各种防爬虫的技术就对你没有办法了。&lt;br&gt;而构造和浏览器一模一样的请求也很简单，HTTP通过WireShark 抓包对比，一个字段一个字段修改成一样即可； HTTPS可以使用fiddler工具抓包对比（需要配置下SSL证书）&lt;/p&gt;
&lt;h3 id=&quot;进阶&quot;&gt;&lt;a href=&quot;#进阶&quot; class=&quot;headerlink&quot; title=&quot;进阶&quot;&gt;&lt;/a&gt;进阶&lt;/h3&gt;&lt;p&gt;前面的爬虫实例只是爬取一个或者几个页面，所以比较简单。 但是当我们想爬取一整个网站（如豆瓣，页面总数至少是千万级别）这样简单的实现就不行了。 以上面这样简单的实现爬整个豆瓣不知道100年能不能搞定。&lt;br&gt;这时候就需要从以下几个方面来提升爬虫的性能：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多线程  &lt;/li&gt;
&lt;li&gt;集群&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;参考资料与实用工具&quot;&gt;&lt;a href=&quot;#参考资料与实用工具&quot; class=&quot;headerlink&quot; title=&quot;参考资料与实用工具&quot;&gt;&lt;/a&gt;参考资料与实用工具&lt;/h3&gt;&lt;p&gt;Python快速入门，适合有其他语言基础的同学：  &lt;a href=&quot;http://learnpythonthehardway.org/book/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;Learn Python The Hard Way&lt;/em&gt;&lt;/a&gt;&lt;br&gt;Pyhotn教程，适合零基础同学：&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;廖雪峰Python教程&lt;/em&gt;&lt;/a&gt;&lt;br&gt;好用的Python IDE: &lt;a href=&quot;http://www.jetbrains.com/pycharm/download/#section=windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PyCharm&lt;/a&gt;&lt;br&gt;Python爬虫教程： &lt;a href=&quot;http://cuiqingcai.com/1052.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;Python爬虫学习系列教程&lt;/em&gt;&lt;/a&gt;&lt;br&gt;正则表达式非常好用的调试工具: &lt;a href=&quot;http://www.regexbuddy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;RegexBuddy&lt;/em&gt;&lt;/a&gt;&lt;br&gt;抓包工具: &lt;a href=&quot;https://www.wireshark.org/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WireShark&lt;/a&gt;&lt;br&gt;HTTPS 抓包分析工具: &lt;a href=&quot;http://www.telerik.com/fiddler&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fiddler&lt;/a&gt;&lt;br&gt;fiddler分析HTTPS ：&lt;a href=&quot;http://www.cnblogs.com/bukudekong/p/3837125.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;配置fiddler查看HTTPS&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;说起‘爬虫’，大家第一映像是这是个很酷的东西，听起来很厉害的样子。一般人对爬虫的理解就是这样了，不会对爬虫有一些深入的思考。   &lt;/p&gt;

    
    </summary>
    
      <category term="爬虫" scheme="http://yoursite.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python 爬虫" scheme="http://yoursite.com/tags/python-%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>换位思考，情绪管理以及多角度看问题</title>
    <link href="http://yoursite.com/2016/04/18/%E6%8D%A2%E4%BD%8D%E6%80%9D%E8%80%83%EF%BC%8C%E6%83%85%E7%BB%AA%E7%AE%A1%E7%90%86%E4%BB%A5%E5%8F%8A%E4%BB%8E%E5%B0%BD%E5%8F%AF%E8%83%BD%E5%A4%9A%E7%9A%84%E8%A7%92%E5%BA%A6%E7%9C%8B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/04/18/换位思考，情绪管理以及从尽可能多的角度看问题/</id>
    <published>2016-04-18T15:07:36.000Z</published>
    <updated>2016-06-02T14:07:46.941Z</updated>
    
    <content type="html">&lt;p&gt;最近新成立的产品线举行TOP攻城狮颁奖大会，在公司内部倡导工程师文化，同时沟通澄清公司组织切换成立新产品线的考量以及对CCN的定位与期待。P&amp;amp;S总裁，CCN产品线总裁都作了分享，收获比较大，这里整理分享几点自己印象最深刻的。&lt;/p&gt;
&lt;h3 id=&quot;1-换位思考&quot;&gt;&lt;a href=&quot;#1-换位思考&quot; class=&quot;headerlink&quot; title=&quot;1. 换位思考&quot;&gt;&lt;/a&gt;1. 换位思考&lt;/h3&gt;&lt;p&gt;换位思考一直是人际关系中核心，同时也是人迈向成熟必不可少的技能之一。 “屁股决定脑袋”,没有换位思考是很难建立起同理心的。&lt;br&gt;我们大家不用怎么深思熟虑都知道换位思考的益处，但总是很难做到，因为我们缺乏换位思考的一般的可复制的操作方法。CCN产品线总裁分享了关于换位思考的几个不同层次，可以比较清晰具体的指导我们怎么进行换位思考。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;思考从角度上来说，可以分为以下4个层次  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自我思考&lt;br&gt;这个层次是人自然的思考层次，大多数人也只会处于这个层次 。从我的角度看，我有哪些做的好的，哪些做的不好的   &lt;/li&gt;
&lt;li&gt;从他人角度思考&lt;br&gt;思考时从他人角度出发，可以理解他人的行为，也可以从他人的角度分析自己的行为正确与错误  &lt;/li&gt;
&lt;li&gt;从客观公正的第三方角度&lt;br&gt;从第三方的角度客观公正的思考，评价自我与他人的行为  &lt;/li&gt;
&lt;li&gt;从系统或制度的角度思考&lt;br&gt;可以从系统或者制度，流程等方面思考为什么会出现现在的局面，我和对方的行为多大程度上是系统，制度，流程等因素引起的？这些因素有没有改进空间，改进措施是什么？&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以按照以上4个层次有意识的培养自己换位思考的能力。对于一件事情，可以按照以上4个步骤进行操作。也可以把建立换位思考的能力当做一个游戏，当你能下意识的从某个角度换位思考时你就达到了那个等级。 &lt;/p&gt;
&lt;p&gt;老实说， 自己也还是level 1 ，绝大多数时候都是从自我角度思考， 很少从其他人角度考虑问题。今后要有意思的培养自己换位思考的能力，希望能尽快升级到level 4.&lt;/p&gt;
&lt;h3 id=&quot;2-情绪管理&quot;&gt;&lt;a href=&quot;#2-情绪管理&quot; class=&quot;headerlink&quot; title=&quot;2. 情绪管理&quot;&gt;&lt;/a&gt;2. 情绪管理&lt;/h3&gt;&lt;p&gt;情绪管理是情商的本质，是良好的人际关系的基石。几乎所有人想提高自己的情商，但很少有人知道怎么去做。我们周围情商高的人绝大多数都是在开明，幽默的成长环境中逐渐熏陶出的天赋异禀，少有后天的有意识的培养出的能力。&lt;br&gt;这次大会也分享了情绪管理方面的内容，确实是真知灼见！&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;了解自己的偏好&lt;br&gt;了解什么东西可以使自己快乐，什么东西是我不喜欢的&lt;/li&gt;
&lt;li&gt;控制自己的情绪&lt;br&gt;在适当的场合能控制自己的情绪，特别负面情绪。工作需要就事论事，不能带有情绪。和家人，朋友相处也能随意由着自己的小性子。&lt;/li&gt;
&lt;li&gt;洞察别人的情绪&lt;br&gt;要能敏锐的洞察到他人的情绪，根据他人情绪采取适当行为&lt;/li&gt;
&lt;li&gt;影响，带动他人情绪&lt;br&gt;乐观可以刚染他人，团队leader 可以激励团队斗志&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;值得欣慰的是，情绪管理我应该初步达到了level 2 , 也要不停锻炼自己尽快升级&lt;del&gt;~&lt;/del&gt;&lt;del&gt;~&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-尽可能多些角度看问题&quot;&gt;&lt;a href=&quot;#3-尽可能多些角度看问题&quot; class=&quot;headerlink&quot; title=&quot;3. 尽可能多些角度看问题&quot;&gt;&lt;/a&gt;3. 尽可能多些角度看问题&lt;/h3&gt;&lt;p&gt;盲人摸象的故事我们小学就学过了，但绝大多数人（包括我自己）都是学过了就学过了，或者学过了就忘了。 它实际刻画出了只从单一角度看问题的危害：单一角度看不到真实的大象。看待事物的角度越多，就可以获得更多维度的信息，进而可以描绘出更真实的事物。&lt;br&gt;这次CCN产品线TOP工程师颁奖大会就可以从多个不同的角度来理解： &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从性别角度看&lt;/strong&gt;&lt;br&gt;领军人物全部为男性，TOP10工程师全部为男性，TOP200工程师全部为男性…..&lt;br&gt;从这一个小小的细节可以看出，目前研发体系男性是处于支配地位的。 实际的情况也验证了这一点，越是高级别的岗位，女性的身影就越少。 基层还是可以看到很多女性员工的，但是PL 就很少看到女性了。 PM几乎看不到女性了。 更上以及的岗位目前我在公司还没见到过女性。&lt;br&gt;延伸开去，可以基本推断目前整个IT，CT行业的研发体系都是男性占据主要支配地位的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从年龄角度看&lt;/strong&gt;&lt;br&gt;年龄是比较私人的信息， 不过我们也可以从工作年限的角度看下分布。&lt;br&gt;领军人物在公司的平均工作年限为12年，TOP10工程师平均年限为8年，TOP200平均年限为5年….（所以本人不出意外的没有上榜）&lt;/p&gt;
&lt;p&gt;从年龄角度看，目前公司的核心主力应该还是80后这一波人，90，91的人正在逐渐成为主力。见微知著，目前整个中国社会的主力应该是80后这一波人，但90后也开始发力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从TOP工程师表彰目的看&lt;/strong&gt;&lt;br&gt;产品线举办TOP工程师表彰会并且要求全员必须参加，目的是促进产品线工程师文化的逐渐形成，和以往的码农说byebye. 以前追求的是能干活就好，现在要求的是能创造性的解决工作中的问题。（官方是这么说的，其实本人一直觉得编码也是一种艺术）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从组织变更沟通看&lt;/strong&gt;&lt;br&gt;此次成立CCN又有新的子产品线（估计500到800人）合入产品线。 举办TOP工程师表彰会，让新合入的同事看到，TOP 工程师也有很多是子产品线的，表明了产品线会一碗水端平的态度。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;扯点不相关的&lt;/p&gt;
&lt;p&gt;有个学者去北大演讲，提问环节有个学生问：“作为一名家境平凡的北大毕业生，应该怎么在社会中定位自己？”&lt;br&gt;回答铿锵有力：“你们就是社会底层劳动人民里，知识水平比较高的那些”&lt;/p&gt;
&lt;p&gt;回答的真好，&lt;strong&gt;知识水平比较高的底层劳动人民&lt;/strong&gt;定位非常精准，简直是为&lt;strong&gt;码农&lt;/strong&gt;良身定做的……&lt;/p&gt;
&lt;p&gt;最近&lt;a href=&quot;https://www.zhihu.com/people/yunshu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;云舒大大&lt;/a&gt;（阿里花名“易变”）从阿里离职也很是沸沸扬扬， 云舒自己在知乎澄清自己离职是因为自己去创业了。 不过这不是重点，重点是晒出了云舒晒出了自己的工资单：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2004年7月，1200¥&lt;/p&gt;
&lt;p&gt;2005年5月，5500¥&lt;/p&gt;
&lt;p&gt;2006年1月，9000¥&lt;/p&gt;
&lt;p&gt;2008年2月，16000¥&lt;/p&gt;
&lt;p&gt;2008年4月，13000¥&lt;/p&gt;
&lt;p&gt;现在，X¥&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有热心的阿里同学为大家解惑， X 原来是200w base+ 6000w 股票&lt;/p&gt;
&lt;p&gt;这种行为非常装(A和C之间)， 但是也很爽，希望自己能将了也能这样装下……..&lt;br&gt;今天记下第一行：&lt;br&gt;2016年4月, x ¥&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近新成立的产品线举行TOP攻城狮颁奖大会，在公司内部倡导工程师文化，同时沟通澄清公司组织切换成立新产品线的考量以及对CCN的定位与期待。P&amp;amp;S总裁，CCN产品线总裁都作了分享，收获比较大，这里整理分享几点自己印象最深刻的。&lt;/p&gt;
&lt;h3 id=&quot;1-换位思考&quot;&gt;
    
    </summary>
    
      <category term="自我管理" scheme="http://yoursite.com/categories/%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="自我管理" scheme="http://yoursite.com/tags/%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>人为什么活着---迷茫与思考</title>
    <link href="http://yoursite.com/2016/03/25/%E4%B8%80%E4%BA%9B%E8%BF%B7%E8%8C%AB%E4%B8%8E%E6%80%9D%E8%80%83/"/>
    <id>http://yoursite.com/2016/03/25/一些迷茫与思考/</id>
    <published>2016-03-25T14:52:45.000Z</published>
    <updated>2016-06-28T14:56:01.093Z</updated>
    
    <content type="html">&lt;h2 id=&quot;迷茫&quot;&gt;&lt;a href=&quot;#迷茫&quot; class=&quot;headerlink&quot; title=&quot;迷茫&quot;&gt;&lt;/a&gt;迷茫&lt;/h2&gt;&lt;p&gt;最近会有一些间隔性(几个月一次）的迷茫，迷茫人生到底应该怎么样子度过，常常是一整天的工作（经常态)或者是一整天游戏之后会觉得自己目前在做的事情一点意义也没有。 据说人贤者时间也容易思考类似的问题，不过还没有经历过。 这个时候总是很容易从更大的时间维度或者更大的空间维度审视自己的生活。 在时间层面看（假设我是未来的人，看今天的历史）历史没有我什么事情，在空间的层面看（把视角扩展到地球，太阳系，银河系，整个宇宙）也没有我什么事情，然后得出我和大部分人的人生并没有什么意义，对生活失去乐趣，觉得所有事情都无所谓了。&lt;/p&gt;
&lt;p&gt;然后就会纠结一个问题，人活着到底是为了什么？&lt;/p&gt;
&lt;p&gt;这个问题自大学以来就困扰着我。一般情况下我会忘了它，但总有那些个时刻它会来找我。&lt;/p&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;p&gt;这个问题几千年来的成年人都遇到过，但从古至今都没有什么明确答案。&lt;/p&gt;
&lt;p&gt;上一次它来找我时， 我给自己设定了个答案：世界上有那边多东西，风景，各种稀奇古怪的东西我没见过， 我要去看一看这些东西。 但是给自己设定这个答案的同时，又会想即使“世界那么大，我都看了看”又有什么意思呢？&lt;/p&gt;
&lt;p&gt;它时不时的找我也改变了我对工作的态度。 以前会觉得追求世俗意义上的事业成功，什么都可以忍受， 正如我司的那句名言一样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要么忍，要么狠，要么滚！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后来又慢慢觉得追求世俗意义上的事业是可以的，但同时工作的开心也应该放在同等重要的位置上。&lt;/p&gt;
&lt;p&gt;平时同事家人都在耳边不停的说，要赶紧找女朋友，年龄到了。现在觉得顺其自然遇到三观相合，和拍的人就好， 遇不到单身也挺好，单身一辈子也挺好。&lt;/p&gt;
&lt;h2 id=&quot;几个幽灵&quot;&gt;&lt;a href=&quot;#几个幽灵&quot; class=&quot;headerlink&quot; title=&quot;几个幽灵&quot;&gt;&lt;/a&gt;几个幽灵&lt;/h2&gt;&lt;p&gt;有几个问题像幽灵一样会和我纠缠一生：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;世界从何而来？&lt;/li&gt;
&lt;li&gt;我是谁？&lt;/li&gt;
&lt;li&gt;人活着是为了什么？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章应该会是一篇持续性的文章，把自己和这几个幽灵持续纠缠的过程记录下，希望以后我会找到自己认可的答案！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;update in 2016/06/28 &lt;/em&gt;&lt;br&gt;认识心仪的姑娘，姑娘还单身，&lt;br&gt;我说，你很吸引我，第一天想谈甚欢；&lt;br&gt;第二天姑娘说，我和你不可能了，中午有人向我表白， 我和他更合适；&lt;br&gt;为什么他更合适，为什么不留几个月时间再考虑下？&lt;br&gt;因为我和他认识比你早；&lt;/p&gt;
&lt;p&gt;这是我25年生命中经历过最戏剧，最命运的事情！ &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;资源有限，竞争无处不在，所以要主动，去尝试，去行动&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;人生无常，所有要把握现在，要学习，要有成长&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;迷茫&quot;&gt;&lt;a href=&quot;#迷茫&quot; class=&quot;headerlink&quot; title=&quot;迷茫&quot;&gt;&lt;/a&gt;迷茫&lt;/h2&gt;&lt;p&gt;最近会有一些间隔性(几个月一次）的迷茫，迷茫人生到底应该怎么样子度过，常常是一整天的工作（经常态)或者是一整天游戏之后会觉得自己目前在做的事
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="思考感悟" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>TinySTL设计与实现</title>
    <link href="http://yoursite.com/2016/03/23/TinySTL%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2016/03/23/TinySTL设计与实现/</id>
    <published>2016-03-23T15:38:55.000Z</published>
    <updated>2016-03-30T15:13:54.080Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;学习和理解template 和STL 的最好方式就是自己用template 造一个STL(俗称&lt;em&gt;造轮子&lt;/em&gt;)，然后不断对比自己版本的STL与标准版本的STL(sgi STL 或者其它版本），不断重构自己的版本，使自己的版本达到或者超过标准库版本。&lt;/p&gt;
&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;实现Containers Library （中的一种或几种）&lt;/li&gt;
&lt;li&gt;实现Algorithms Library  （中的一种或几种）&lt;/li&gt;
&lt;li&gt;实现String Library ，并替换前面实现部分中的std::string （如果有使用到）为自己的版本；&lt;/li&gt;
&lt;li&gt;编译为dll/lib/so 文件，供自己他人使用&lt;/li&gt;
&lt;li&gt;引入Google Test 框架，完善测试代码，注释，不断重构，提升自己实现版本性能（达到或超过标准库）；&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;接口实现尽量与标准库保持一致，参考&lt;a href=&quot;http://en.cppreference.com/w/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cppreference&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于工作的原因，投入的时间不固定，所以TinySTL的设计与实现会是一个相对比较长期的过程。&lt;/p&gt;
&lt;p&gt;在实现过程中会通过一系列文章总结，分享自己在实现中遇到的各种问题，各种坑。&lt;/p&gt;
&lt;h2 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;项目地址&lt;/h2&gt;&lt;p&gt;   &lt;a href=&quot;https://github.com/geekhuqijun/TinySTL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github:TinySTL&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;进度&quot;&gt;&lt;a href=&quot;#进度&quot; class=&quot;headerlink&quot; title=&quot;进度&quot;&gt;&lt;/a&gt;进度&lt;/h2&gt;&lt;p&gt;2016.3.20 , vector 完成,参考 &lt;a href=&quot;http://blog.csdn.net/xiaoyaohuqijun/article/details/50709526&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;TinySTL 之vector 设计,实现与中间的坑&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;学习和理解template 和STL 的最好方式就是自己用template 造一个STL(俗称&lt;em&gt;造轮子&lt;/em&gt;)，然后不断对比自己版
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++ STL" scheme="http://yoursite.com/tags/C-STL/"/>
    
  </entry>
  
  <entry>
    <title>一次youtube学习英语实践</title>
    <link href="http://yoursite.com/2016/02/28/%E4%B8%80%E6%AC%A1youtube%E5%AD%A6%E4%B9%A0%E8%8B%B1%E8%AF%AD%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2016/02/28/一次youtube学习英语实践/</id>
    <published>2016-02-28T07:11:21.000Z</published>
    <updated>2016-02-28T07:30:16.653Z</updated>
    
    <content type="html">&lt;p&gt;利用youtube上丰富的资源来学习英语，顺带开阔视野，愉悦身心是一件非常美妙的事情。&lt;/p&gt;
&lt;p&gt;这次实践的是知乎上一位匿名用户提供的方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条件：pc + true Internet :)工具：欧路词典（加载某本权威的学习型词典，牛津朗文都可以），为知笔记（别的笔记软件也可以，甚至Word，onenote等等。有道云笔记崩溃太频繁，不推荐）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选视频&lt;/li&gt;
&lt;li&gt;第一遍,第一遍就先别看字幕了。听不懂的可以多听两遍，实在不行先放一边，不强求。&lt;/li&gt;
&lt;li&gt;第二遍,第二遍开字幕，要求把整个视频都吃透。在笔记软件里新建个以视频为标题的笔记，附带上视频的播放地址。不会的单词/短语/俚语运用欧陆词典、谷歌、urban dictionary 将其搞定，并将视频截图与查出来的资料记录在刚才新建的笔记里&lt;/li&gt;
&lt;li&gt;复习,由于前期准备工作得力，复习就很方便了。为知笔记什么的都有手机平板客户端，也不用多说了。视频的地址我们已经贴在笔记里，随时可以回顾。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里要感谢该用户分享自己利用youtube 学习的方法:&lt;a href=&quot;https://www.zhihu.com/question/21614911&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;怎么利用youtube学习&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这次实践的是Ellen Show 关于Adam Levine 的一期节目，观看地址为：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=k3aAl92_VDE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adam Levine’s New Girlfriend&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实践的用的笔记软件是EverNote,笔记的链接为：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://app.yinxiang.com/l/AALVjgFVBSpNcbWzzi8S6BMnFXm2evA0IkE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adam Levine’s New Girlfriend(The Ellen Show,youtube)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;关于TheEllenShow&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=oavQZ8kFfgc_q_gKKZnVA5D1s5p6s0VSONsEbM92Y4q1rQHZ1uU3zye35JD-UYnVGKt3kwqXOshKpfhtFbAwkq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EllenShow&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个脱口秀赢得了31座艾美奖。“The Ellen DeGeneres Show”在2010年9月13日开始了第八季，Ellen通过独特的轻松，自然，坦诚，诙谐，幽默的主持风格与滑稽有趣的节目环节继续证明着这个节目作为日间脱口秀的领导者地位。该节目因彰显人道主义更而获得好评。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;关于 Adam Levine&lt;/em&gt;&lt;br&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=k1sgka2hd1PpJ1ojub07fM_F8_60mK5aIt1dVvbKNWIyT8RTKs77PL1hYJl2SeNS0iNRmlmNkI8hTScfEq3q5a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adam Levine&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;亚当·莱文（Adam Levine），1979年3月18日出生于美国加利福尼亚州洛杉矶，美国流行乐男歌手、吉他手、歌词创作人，美国流行摇滚乐团maroon 5成员。&lt;br&gt;2002年6月发布首张专辑《Songs About Jane》，该专辑总销量突破1100万张，被认证为白金唱片。2011年，亚当·莱文与克里斯蒂娜·阿奎莱拉合作演唱歌曲《Moves Like Jagger》，向滚石乐队（The Rolling Stones）主唱米克·贾格尔致敬，同年该曲成为18国冠军单曲，全球销量突破1000万。2012年6月，发行第四张录音室专辑《Overexposed》，其中两首单曲《payphone》和《One More Night》分别在美国公告牌单曲榜年终top100中的获得第四位和第八位。2014年9月发布第五张录音室专辑《V》，首周销量突破16万张。同年其参演的电影《歌曲改变人生》在中国大陆上映 ，其为该影片创作的主题曲《Lost Stars》获第87届奥斯卡最佳原创歌曲奖提名。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;利用youtube上丰富的资源来学习英语，顺带开阔视野，愉悦身心是一件非常美妙的事情。&lt;/p&gt;
&lt;p&gt;这次实践的是知乎上一位匿名用户提供的方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;条件：pc + true Internet :)工具：欧路词典（加载某本权威的学习型词典
    
    </summary>
    
      <category term="生产力工具" scheme="http://yoursite.com/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="youtube 英语学习" scheme="http://yoursite.com/tags/youtube-%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>了不起的盖茨比--读书感想</title>
    <link href="http://yoursite.com/2016/02/28/%E4%BA%86%E4%B8%8D%E8%B5%B7%E7%9A%84%E7%9B%96%E8%8C%A8%E6%AF%94/"/>
    <id>http://yoursite.com/2016/02/28/了不起的盖茨比/</id>
    <published>2016-02-28T04:44:39.000Z</published>
    <updated>2016-02-28T05:06:40.171Z</updated>
    
    <content type="html">&lt;p&gt;　　以前在学校里的时候有读过”了不起的盖茨比“ ， 当时总感觉这个故事在说些什么，但是自己总是理解不了，当时也就是记住了一句比较有道理的&lt;br&gt;话”每逢你想批评任何人的时候，你就记住，这个世界上的所有人，并不是个个都有过你那些优越条件”。这句话倒是在工作中给了我一些帮助。工作以后时间比较少，很快就把”盖茨比“忘在脑后，只知道菲茨杰拉德笔下有这样一个人物形象，但他是谁，有过什么故事一概都忘了。倒是唯一记住的一句话很有用，在工作中慢慢对同理心有一定的体会。&lt;/p&gt;
&lt;p&gt; 　  这个周末又把“了不起的盖茨比”不知从哪个角落翻了出来， 有重新读了遍小说，也把莱昂纳多主演的那部电影看了下。&lt;br&gt;不同的人生阶段看这个故事总是有不同的收获，三千个读者就有三千个哈姆雷特。以前可能会觉得盖茨比太傻了，过了那么久怎么还想着黛西，按照我国的话来说，他早就可以“出任CEO，赢取白富美，走向人生巅峰了”。这次再读，唏嘘不已。 对我而言，盖茨比确实是伟大的，因为盖茨比是一个有坚持的人。 坚持是一件很难所以很宝贵的事情。我们每个人都知道，如果每天坚持健身，坚持学英文，坚持阅读……坚持下去自己会有很大的提高，但是真正能够坚持的人又有多少了。 坚持每天做一些具体的事情都这样困难，何况是坚持一种虚无缥缈的信仰，理想，为人准则，有太多的人在现实面前抛弃了自己的准则，至于理想，信仰不知道在多少年前就已经远去了。&lt;/p&gt;
&lt;p&gt;　　对于盖茨比和黛西二人的感情，我觉得一开始就可能是个悲剧。一个是典型的美国穷小子，一个是大大的白富美，二者的世界相差太多，本质上二人的三观就是不同的。外在的物质的差距可以被缩小消除，但是内在的差异却难以改变。正如汤姆对盖茨比说的一样“我，她，他们都和你不一样，深入血液的不一样”。所以最后盖茨比被摧毁了，黛西和汤姆如无其事的去欧洲旅游去了。能够长久走下去的两个人，一定是三观相似的人，或者更为恰当的说是三观融洽的人。&lt;/p&gt;
&lt;p&gt;　　盖茨比那个时代的美国很现在的中国很像。那个时候的美国在一战中大发其财，赚的盆满钵满，经济连续增长，整个美国都好像陷入某种狂热之中。现在的中国经济也连续几十年的高速增长，人人都忙着赚钱，一切都朝钱看。我想在追逐物质时代，内心还是需要为某些追求，某些兴趣留下一点点空间的。&lt;/p&gt;
&lt;p&gt;　　这就是重读“了不起的盖茨比“的一些胡思乱想。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　以前在学校里的时候有读过”了不起的盖茨比“ ， 当时总感觉这个故事在说些什么，但是自己总是理解不了，当时也就是记住了一句比较有道理的&lt;br&gt;话”每逢你想批评任何人的时候，你就记住，这个世界上的所有人，并不是个个都有过你那些优越条件”。这句话倒是在工作中给了我一些帮助。工
    
    </summary>
    
      <category term="阅读" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="读书笔记 菲茨杰拉德" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E8%8F%B2%E8%8C%A8%E6%9D%B0%E6%8B%89%E5%BE%B7/"/>
    
  </entry>
  
  <entry>
    <title>科学上网--使用VPS搭建自己的VPN</title>
    <link href="http://yoursite.com/2016/02/27/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://yoursite.com/2016/02/27/科学上网/</id>
    <published>2016-02-27T14:03:51.000Z</published>
    <updated>2016-02-28T05:52:30.214Z</updated>
    
    <content type="html">&lt;h3 id=&quot;一，原理&quot;&gt;&lt;a href=&quot;#一，原理&quot; class=&quot;headerlink&quot; title=&quot;一，原理&quot;&gt;&lt;/a&gt;一，原理&lt;/h3&gt;&lt;p&gt;  科学上网，相信大家都明白是什么意思！&lt;br&gt;网上各种免费或者付费的VPN代理工具其原理大致一样：通过一台可以连接到墙外的服务器中转（代理）。本地PC和代理服务器网络是相通的，代理服务器和墙外（google.com等）是相通的， 故通过代理可以实现翻墙的目的，成功访问google.com&lt;/p&gt;
&lt;h3 id=&quot;二，搭建步骤&quot;&gt;&lt;a href=&quot;#二，搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;二，搭建步骤&quot;&gt;&lt;/a&gt;二，搭建步骤&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1 准备一个海外的VPS，美国或者香港或者日本的机房都可以&lt;/strong&gt;&lt;br&gt;   我本人使用的是&lt;a href=&quot;https://bandwagonhost.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬瓦工&lt;/a&gt; 洛杉矶的机房，国内延时200ms ,选的20$ 一年的套餐。&lt;br&gt;   &lt;em&gt;搬瓦工的使用教程可以百度，网络上非常多，可以参&lt;/em&gt;&lt;a href=&quot;http://banwagong.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;考板瓦工中文网&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 VPS安装shadowsocks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Debian / Ubuntu:&lt;/p&gt;
&lt;p&gt;apt-get install python-pip&lt;/p&gt;
&lt;p&gt;pip install shadowsocks&lt;/p&gt;
&lt;p&gt;CentOS:&lt;/p&gt;
&lt;p&gt;yum install python-setuptools &amp;amp;&amp;amp; easy_install pip&lt;/p&gt;
&lt;p&gt;pip install shadowsocks   &lt;/p&gt;
&lt;p&gt;参考shadowsocks github上的&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;搬瓦工的VPS可以在控制面板选择一键选择安装shadowsocks KiwiVM Extras-&amp;gt;ShadowsocksServer,这点还是比较方便的&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3 启动shaodowsocks 服务&lt;/strong&gt;&lt;br&gt;  &lt;em&gt;sudo ssserver -p 443 -k password -m rc4-md5 –user nobody -d start&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4 本地PC安装shadowsocks客户端&lt;/strong&gt;&lt;br&gt;   &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-windows/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载路径&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在任务栏找到 Shadowsocks 图标&lt;br&gt;在 服务器 菜单添加多个服务器&lt;br&gt;选择 启用系统代理 来启用系统代理。请禁用浏览器里的代理插件，或把它们设置为使用系统代理。&lt;br&gt;除了设为系统代理，你也可以直接自己配置浏览器代理。在 SwitchyOmega 中把代理设置为 SOCKS5 或 HTTP 的 127.0.0.1:1080。这个 1080 端口可以在服务器设置中设置。&lt;/p&gt;
&lt;p&gt;然后打开浏览器，就可以愉快的访问google.com 等网站了&lt;/p&gt;
&lt;h3 id=&quot;三，小结&quot;&gt;&lt;a href=&quot;#三，小结&quot; class=&quot;headerlink&quot; title=&quot;三，小结&quot;&gt;&lt;/a&gt;三，小结&lt;/h3&gt;&lt;p&gt;由于党国的国情， 这种事情不能写的太细。 不过使用搬瓦工VPS+shadowsocks 还是能非常快速的搭建自己的VPN，实现科学上网的目的。&lt;/p&gt;
&lt;h3 id=&quot;四，更多资料&quot;&gt;&lt;a href=&quot;#四，更多资料&quot; class=&quot;headerlink&quot; title=&quot;四，更多资料&quot;&gt;&lt;/a&gt;四，更多资料&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://program-think.blogspot.com/2009/05/how-to-break-through-gfw.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;编程随想&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fanqianghou.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;墙外是什么&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一，原理&quot;&gt;&lt;a href=&quot;#一，原理&quot; class=&quot;headerlink&quot; title=&quot;一，原理&quot;&gt;&lt;/a&gt;一，原理&lt;/h3&gt;&lt;p&gt;  科学上网，相信大家都明白是什么意思！&lt;br&gt;网上各种免费或者付费的VPN代理工具其原理大致一样：通过一台可以连接到墙外的
    
    </summary>
    
      <category term="生产力工具" scheme="http://yoursite.com/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="VPN 科学上网" scheme="http://yoursite.com/tags/VPN-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>新的开始---MarkDown初体验</title>
    <link href="http://yoursite.com/2016/02/25/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>http://yoursite.com/2016/02/25/新的开始/</id>
    <published>2016-02-25T04:47:50.000Z</published>
    <updated>2016-02-26T16:04:18.038Z</updated>
    
    <content type="html">&lt;p&gt;迁移到独立的个人博客花了点时间，新博客的第一篇文章准备学习与总结下MarkDown，一方面是博客本身就是托管在有浓厚MarkDown氛围的GitHub上，另一方面MarkDown 确实非常优秀！&lt;/p&gt;
&lt;p&gt;(●’◡’●)这篇文章本身也是用MarkDown写的！&lt;/p&gt;
&lt;h3 id=&quot;一-认识MarkDown&quot;&gt;&lt;a href=&quot;#一-认识MarkDown&quot; class=&quot;headerlink&quot; title=&quot;一 认识MarkDown&quot;&gt;&lt;/a&gt;一 认识MarkDown&lt;/h3&gt;&lt;p&gt;Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。&lt;/p&gt;
&lt;h4 id=&quot;MarkDown官方文档&quot;&gt;&lt;a href=&quot;#MarkDown官方文档&quot; class=&quot;headerlink&quot; title=&quot;MarkDown官方文档&quot;&gt;&lt;/a&gt;MarkDown官方文档&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这里可以看到 MarkDown 的官方文档，是学习MarkDown最权威的资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创始人 John Gruber 的 Markdown 语法说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.markdown.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkDown中文网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;使用-MarkDown-的优点&quot;&gt;&lt;a href=&quot;#使用-MarkDown-的优点&quot; class=&quot;headerlink&quot; title=&quot;使用 MarkDown 的优点&quot;&gt;&lt;/a&gt;使用 MarkDown 的优点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;专注为文档内容，而不是排版&lt;/li&gt;
&lt;li&gt;轻松的导出HTML，PDF和本身的.md格式&lt;/li&gt;
&lt;li&gt;纯文本内容，只需要任何一种编辑器就可以使用起来&lt;/li&gt;
&lt;li&gt;写博客也像Coding一样爽，特别是对Coder来说&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用什么工具&quot;&gt;&lt;a href=&quot;#使用什么工具&quot; class=&quot;headerlink&quot; title=&quot;使用什么工具&quot;&gt;&lt;/a&gt;使用什么工具&lt;/h4&gt;&lt;p&gt;虽然MarkDown 对于工具几乎没有什么要求，任何一款编辑器（即使是TXT的NotePad)都可以用来写MarKDown ,但无疑一款好的编辑器可以显著的提升效率，让你用的飞起来。&lt;/p&gt;
&lt;p&gt;本人在Windows 平台上使用的是MarkdownPad2 ,可以实时预览非常不错。 MarkPad 也不错，GUI比MarkdownPad2 做的好，比Markdownpad 界面漂亮多了，不过就是安装这块做的很糟糕。&lt;/p&gt;
&lt;p&gt;这里附上两个工具的链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://markdownpad.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdownpad2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://code52.org/DownmarkerWPF/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkPad&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;二-MarkDown-简要语法&quot;&gt;&lt;a href=&quot;#二-MarkDown-简要语法&quot; class=&quot;headerlink&quot; title=&quot;二 MarkDown 简要语法&quot;&gt;&lt;/a&gt;二 MarkDown 简要语法&lt;/h3&gt;&lt;h4 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h4&gt;&lt;p&gt;MarkDown 使用# 符号来标识是否为标题，如果一段文字被定义为标题，则只需要在这段文字之前加上# 符号即可&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。&lt;/p&gt;
&lt;h4 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h4&gt;&lt;p&gt;MarkDown中有无序和有序两种列表。无序列表使用星号，加号或是减号作为标记：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Red&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Green&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;有序列表使用数字加一个英文句号作为标记：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Red&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Green&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h4&gt;&lt;p&gt;如果你需要引用一小段别处的句子，那么就要用引用的格式。&lt;br&gt;MarkDown 中，如果一段文字之前加上&amp;gt; 标识引用，例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用的例子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;图片与链接&quot;&gt;&lt;a href=&quot;#图片与链接&quot; class=&quot;headerlink&quot; title=&quot;图片与链接&quot;&gt;&lt;/a&gt;图片与链接&lt;/h4&gt;&lt;p&gt;插入链接与插入图片的语法很像，区别在一个 !号&lt;/p&gt;
&lt;p&gt;图片为：&lt;img src=&quot;&quot; alt=&quot;&quot;&gt;{ImgCap}{/ImgCap}.&lt;/p&gt;
&lt;p&gt;链接为： &lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;插入图片的地址需要图床，这里推荐围&lt;a href=&quot;http://weibotuchuang.sinaapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;脖图床修复计划&lt;/a&gt; 与 &lt;a href=&quot;https://www.getcloudapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CloudApp&lt;/a&gt; 的服务，生成URL地址即可。&lt;/p&gt;
&lt;h4 id=&quot;粗体与斜体&quot;&gt;&lt;a href=&quot;#粗体与斜体&quot; class=&quot;headerlink&quot; title=&quot;粗体与斜体&quot;&gt;&lt;/a&gt;粗体与斜体&lt;/h4&gt;&lt;p&gt;Markdown 的粗体和斜体也非常简单，用两个 &lt;em&gt; 包含一段文本就是粗体的语法，用一个 &lt;/em&gt; 包含一段文本就是斜体的语法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这里是粗体&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt; &lt;em&gt;这里是斜体&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;代码框&quot;&gt;&lt;a href=&quot;#代码框&quot; class=&quot;headerlink&quot; title=&quot;代码框&quot;&gt;&lt;/a&gt;代码框&lt;/h4&gt;&lt;p&gt;程序猿的福音，当你需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来，例如下面这段简单的Hello Word.&lt;/p&gt;
&lt;h5 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C++&quot;&gt;&lt;/a&gt;C++&lt;/h5&gt;&lt;p&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;int main()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::cout&amp;lt;&amp;lt;&amp;quot;Hello World&amp;quot;&amp;lt;&amp;lt;std::endl;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return 0;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;Python&quot;&gt;&lt;a href=&quot;#Python&quot; class=&quot;headerlink&quot; title=&quot;Python&quot;&gt;&lt;/a&gt;Python&lt;/h5&gt;&lt;p&gt;&lt;code&gt;print(&amp;#39;Hello World)&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;分割线&quot;&gt;&lt;a href=&quot;#分割线&quot; class=&quot;headerlink&quot; title=&quot;分割线&quot;&gt;&lt;/a&gt;分割线&lt;/h4&gt;&lt;p&gt;分割线的语法只需要三个 * 号，例如：&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;三-后记&quot;&gt;&lt;a href=&quot;#三-后记&quot; class=&quot;headerlink&quot; title=&quot;三 后记&quot;&gt;&lt;/a&gt;三 后记&lt;/h4&gt;&lt;p&gt;好了，到这里MarkDown的基本语法就足够在日常中使用了，遇到问题再去查MarkDown 的语法就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;迁移到独立的个人博客花了点时间，新博客的第一篇文章准备学习与总结下MarkDown，一方面是博客本身就是托管在有浓厚MarkDown氛围的GitHub上，另一方面MarkDown 确实非常优秀！&lt;/p&gt;
&lt;p&gt;(●’◡’●)这篇文章本身也是用MarkDown写的！&lt;/p&gt;

    
    </summary>
    
      <category term="生产力工具" scheme="http://yoursite.com/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
</feed>
